version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: next-template-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mysql://next_user:next_password@mariadb:3306/next_template
      - JWT_SECRET=f2631f7c30f6261da86f704d8ac17e8f65cd2146d55a95a876627731a5cd0e61
      - PORT=3000
    depends_on:
      - mariadb
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000', res => process.exit(res.statusCode===200?0:1))"]
      interval: 5s
      timeout: 3s
      retries: 20

  mariadb:
    image: mariadb:10.11
    container_name: next-template-mariadb
    environment:
      - MARIADB_ROOT_PASSWORD=root_password
      - MARIADB_DATABASE=next_template
      - MARIADB_USER=next_user
      - MARIADB_PASSWORD=next_password
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mariadb/init:/docker-entrypoint-initdb.d

  redis:
    image: redis:7-alpine
    container_name: next-template-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  playwright:
    image: mcr.microsoft.com/playwright:v1.54.0-noble
    container_name: next-template-playwright
    working_dir: /work
    ipc: host
    environment:
      - NODE_ENV=test
      - PLAYWRIGHT_TEST_BASE_URL=http://app.target:3000
    depends_on:
      - app
    extra_hosts:
      - "app.target:host-gateway"
    links:
      - "app:app.target"
    volumes:
      - .:/work
      - ./playwright-report:/work/playwright-report
      - ./test-results:/work/test-results
    command: sh -c "npm ci && npx playwright test"

volumes:
  mariadb_data:
  redis_data:
